{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","useState","isListAvailable","showList","isReversed","reverseList","sortBy","sortList","goodsCopy","sort","a","b","length","reverse","className","type","onClick","map","goodItem","ReactDOM","render","document","getElementById"],"mappings":"oMAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAkFaC,EA/EO,WACpB,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAwBC,EAAxB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA2BJ,mBAAS,IAApC,mBAAOK,EAAP,KAAeC,EAAf,KAEMC,EAAS,UAAOT,GAEtB,OAAQO,GACN,IAAK,iBACHE,EAAUC,OACV,MACF,IAAK,WACHD,EAAUC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UAU1C,OAJIR,GACFI,EAAUK,UAIV,sBAAKC,UAAU,MAAf,UACE,uCAECf,EAAgBa,OAEjB,gCACE,wBACEG,KAAK,SACLC,QAAS,kBAAMX,GAAY,IAF7B,qBAOA,wBACEU,KAAK,SACLC,QAAS,kBAAMT,EAAS,mBAF1B,iCAOA,wBACEQ,KAAK,SACLC,QAAS,kBAAMT,EAAS,aAF1B,4BAOA,wBACEQ,KAAK,SACLC,QAAS,WACPT,EAAS,IACTF,GAAY,IAJhB,sBAWDH,EAEG,6BACGM,EAAUS,KAAI,SAAAC,GAAQ,OAAI,6BAAoBA,GAAXA,QAItC,wBACEH,KAAK,SACLC,QAAS,kBAAMb,GAAS,IAF1B,uBCjFVgB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.52c3fa8a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [isListAvailable, showList] = useState(false);\n  const [isReversed, reverseList] = useState(false);\n  const [sortBy, sortList] = useState('');\n\n  const goodsCopy = [...goodsFromServer];\n\n  switch (sortBy) {\n    case 'alphabetically':\n      goodsCopy.sort();\n      break;\n    case 'byLength':\n      goodsCopy.sort((a, b) => a.length - b.length);\n      break;\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    goodsCopy.reverse();\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Goods</h1>\n\n      {goodsFromServer.length}\n\n      <div>\n        <button\n          type=\"button\"\n          onClick={() => reverseList(true)}\n        >\n          Reverse\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => sortList('alphabetically')}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => sortList('byLength')}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            sortList('');\n            reverseList(false);\n          }}\n        >\n          Reset\n        </button>\n      </div>\n\n      {isListAvailable\n        ? (\n          <ul>\n            {goodsCopy.map(goodItem => <li key={goodItem}>{goodItem}</li>)}\n          </ul>\n        )\n        : (\n          <button\n            type=\"button\"\n            onClick={() => showList(true)}\n          >\n            Start\n          </button>\n        )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}